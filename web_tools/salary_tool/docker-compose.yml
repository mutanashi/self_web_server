version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: salary_postgres
    environment:
      POSTGRES_DB: salary_system
      POSTGRES_USER: salary_user
      POSTGRES_PASSWORD: salary_pass123
      POSTGRES_ROOT_PASSWORD: root123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - salary_network

  salary_app:
    build: .
    container_name: salary_app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL:-jdbc:postgresql://postgres:5432/salary_system}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME:-salary_user}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:-salary_pass123}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO:-update}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL:-false}
      SPRING_MAIL_HOST: ${SPRING_MAIL_HOST:-smtp.gmail.com}
      SPRING_MAIL_PORT: ${SPRING_MAIL_PORT:-587}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME:-}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD:-}
      JWT_SECRET: ${JWT_SECRET:-mySecretKey}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
    networks:
      - salary_network
    volumes:
      - ./exports:/app/exports

volumes:
  postgres_data:

networks:
  salary_network:
    driver: bridge
